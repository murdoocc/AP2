# This Makefile is for the Dancer extension to perl.
#
# It was generated automatically by MakeMaker version
# 7.16 (Revision: 71600) from the contents of
# Makefile.PL. Don't edit this file, edit Makefile.PL instead.
#
#       ANY CHANGES MADE HERE WILL BE LOST!
#
#   MakeMaker ARGV: ()
#

#   MakeMaker Parameters:

#     ABSTRACT => q[lightweight yet powerful web application framework]
#     AUTHOR => [q[Dancer Core Developers]]
#     BUILD_REQUIRES => {  }
#     CONFIGURE_REQUIRES => { ExtUtils::MakeMaker=>q[0] }
#     DISTNAME => q[Dancer]
#     EXE_FILES => [q[bin/dancer]]
#     LICENSE => q[perl]
#     MIN_PERL_VERSION => q[5.006]
#     NAME => q[Dancer]
#     PREREQ_PM => { Carp=>q[0], Cwd=>q[0], Data::Dumper=>q[0], Devel::Hide=>q[0], Digest::MD5=>q[0], Encode=>q[0], Exporter=>q[0], ExtUtils::MakeMaker=>q[0], Fcntl=>q[0], File::Basename=>q[0], File::Copy=>q[0], File::Path=>q[0], File::Spec=>q[0], File::Spec::Functions=>q[0], File::Temp=>q[0], File::stat=>q[0], FindBin=>q[0], Getopt::Long=>q[0], HTTP::Body=>q[0], HTTP::Cookies=>q[0], HTTP::Date=>q[0], HTTP::Headers=>q[0], HTTP::Request=>q[0], HTTP::Server::Simple::PSGI=>q[0], Hash::Merge::Simple=>q[0], IO::File=>q[0], IO::Handle=>q[0], IPC::Open3=>q[0], LWP::UserAgent=>q[0], MIME::Types=>q[0], Module::Runtime=>q[0], POSIX=>q[0], Plack::Builder=>q[0], Pod::Usage=>q[0], Scalar::Util=>q[0], Test::Builder=>q[0], Test::More=>q[0], Test::NoWarnings=>q[0], Time::HiRes=>q[0], Try::Tiny=>q[0], URI=>q[0], URI::Escape=>q[0], base=>q[0], blib=>q[1.01], bytes=>q[0], constant=>q[0], lib=>q[0], overload=>q[0], parent=>q[0], strict=>q[0], utf8=>q[0], vars=>q[0], warnings=>q[0] }
#     TEST_REQUIRES => { Devel::Hide=>q[0], Digest::MD5=>q[0], ExtUtils::MakeMaker=>q[0], File::Spec=>q[0], HTTP::Cookies=>q[0], HTTP::Request=>q[0], IO::Handle=>q[0], IPC::Open3=>q[0], Plack::Builder=>q[0], Test::More=>q[0], Test::NoWarnings=>q[0], blib=>q[1.01], utf8=>q[0] }
#     VERSION => q[1.3202]
#     test => { TESTS=>q[t/*.t t/00_base/*.t t/01_config/*.t t/02_request/*.t t/03_route_handler/*.t t/04_static_file/*.t t/05_views/*.t t/06_helpers/*.t t/07_apphandlers/*.t t/08_session/*.t t/09_cookies/*.t t/10_template/*.t t/11_logger/*.t t/12_response/*.t t/13_engines/*.t t/14_serializer/*.t t/15_plugins/*.t t/16_timer/*.t t/17_apps/*.t t/19_dancer/*.t t/20_deprecation/*.t t/21_dependents/*.t t/22_hooks/*.t t/23_dancer_tests/*.t t/24_deployment/*.t t/25_exceptions/*.t] }

# --- MakeMaker post_initialize section:


# --- MakeMaker const_config section:

# These definitions are from config.sh (via C:/ActivePerl/perl/lib/Config.pm).
# They may have been overridden via Makefile.PL or on the command line.
AR = ar
CC = gcc
CCCDLFLAGS =  
CCDLFLAGS =  
DLEXT = xs.dll
DLSRC = dl_win32.xs
EXE_EXT = .exe
FULL_AR = 
LD = g++.exe
LDDLFLAGS = -mdll -s -L"C:\ActivePerl\perl\lib\CORE" -L"C:\ActivePerl\c\lib"
LDFLAGS = -s -L"C:\ActivePerl\perl\lib\CORE" -L"C:\ActivePerl\c\lib"
LIBC = 
LIB_EXT = .a
OBJ_EXT = .o
OSNAME = MSWin32
OSVERS = 6.3
RANLIB = rem
SITELIBEXP = C:\ActivePerl\perl\site\lib
SITEARCHEXP = C:\ActivePerl\perl\site\lib
SO = dll
VENDORARCHEXP = C:\ActivePerl\perl\vendor\lib
VENDORLIBEXP = C:\ActivePerl\perl\vendor\lib


# --- MakeMaker constants section:

# Get dmake to read long commands like PM_TO_BLIB
MAXLINELENGTH = 800000

AR_STATIC_ARGS = cr
DIRFILESEP = \\
DFSEP = $(DIRFILESEP)
NAME = Dancer
NAME_SYM = Dancer
VERSION = 1.3202
VERSION_MACRO = VERSION
VERSION_SYM = 1_3202
DEFINE_VERSION = -D$(VERSION_MACRO)=\"$(VERSION)\"
XS_VERSION = 1.3202
XS_VERSION_MACRO = XS_VERSION
XS_DEFINE_VERSION = -D$(XS_VERSION_MACRO)=\"$(XS_VERSION)\"
INST_ARCHLIB = blib\arch
INST_SCRIPT = blib\script
INST_BIN = blib\bin
INST_LIB = blib\lib
INST_MAN1DIR = blib\man1
INST_MAN3DIR = blib\man3
MAN1EXT = 1
MAN3EXT = 3
INSTALLDIRS = site
DESTDIR = 
PREFIX = $(SITEPREFIX)
PERLPREFIX = C:\ActivePerl\perl
SITEPREFIX = C:\ActivePerl\perl\site
VENDORPREFIX = C:\ActivePerl\perl\vendor
INSTALLPRIVLIB = C:\ActivePerl\perl\lib
DESTINSTALLPRIVLIB = $(DESTDIR)$(INSTALLPRIVLIB)
INSTALLSITELIB = C:\ActivePerl\perl\site\lib
DESTINSTALLSITELIB = $(DESTDIR)$(INSTALLSITELIB)
INSTALLVENDORLIB = C:\ActivePerl\perl\vendor\lib
DESTINSTALLVENDORLIB = $(DESTDIR)$(INSTALLVENDORLIB)
INSTALLARCHLIB = C:\ActivePerl\perl\lib
DESTINSTALLARCHLIB = $(DESTDIR)$(INSTALLARCHLIB)
INSTALLSITEARCH = C:\ActivePerl\perl\site\lib
DESTINSTALLSITEARCH = $(DESTDIR)$(INSTALLSITEARCH)
INSTALLVENDORARCH = C:\ActivePerl\perl\vendor\lib
DESTINSTALLVENDORARCH = $(DESTDIR)$(INSTALLVENDORARCH)
INSTALLBIN = C:\ActivePerl\perl\bin
DESTINSTALLBIN = $(DESTDIR)$(INSTALLBIN)
INSTALLSITEBIN = C:\ActivePerl\perl\site\bin
DESTINSTALLSITEBIN = $(DESTDIR)$(INSTALLSITEBIN)
INSTALLVENDORBIN = C:\ActivePerl\perl\bin
DESTINSTALLVENDORBIN = $(DESTDIR)$(INSTALLVENDORBIN)
INSTALLSCRIPT = C:\ActivePerl\perl\bin
DESTINSTALLSCRIPT = $(DESTDIR)$(INSTALLSCRIPT)
INSTALLSITESCRIPT = C:\ActivePerl\perl\site\bin
DESTINSTALLSITESCRIPT = $(DESTDIR)$(INSTALLSITESCRIPT)
INSTALLVENDORSCRIPT = C:\ActivePerl\perl\bin
DESTINSTALLVENDORSCRIPT = $(DESTDIR)$(INSTALLVENDORSCRIPT)
INSTALLMAN1DIR = none
DESTINSTALLMAN1DIR = $(DESTDIR)$(INSTALLMAN1DIR)
INSTALLSITEMAN1DIR = $(INSTALLMAN1DIR)
DESTINSTALLSITEMAN1DIR = $(DESTDIR)$(INSTALLSITEMAN1DIR)
INSTALLVENDORMAN1DIR = $(INSTALLMAN1DIR)
DESTINSTALLVENDORMAN1DIR = $(DESTDIR)$(INSTALLVENDORMAN1DIR)
INSTALLMAN3DIR = none
DESTINSTALLMAN3DIR = $(DESTDIR)$(INSTALLMAN3DIR)
INSTALLSITEMAN3DIR = $(INSTALLMAN3DIR)
DESTINSTALLSITEMAN3DIR = $(DESTDIR)$(INSTALLSITEMAN3DIR)
INSTALLVENDORMAN3DIR = $(INSTALLMAN3DIR)
DESTINSTALLVENDORMAN3DIR = $(DESTDIR)$(INSTALLVENDORMAN3DIR)
PERL_LIB = C:\ActivePerl\perl\lib
PERL_ARCHLIB = C:\ActivePerl\perl\lib
PERL_ARCHLIBDEP = C:\ActivePerl\perl\lib
LIBPERL_A = libperl.a
FIRST_MAKEFILE = Makefile
MAKEFILE_OLD = Makefile.old
MAKE_APERL_FILE = Makefile.aperl
PERLMAINCC = $(CC)
PERL_INC = C:\ActivePerl\perl\lib\CORE
PERL_INCDEP = C:\ActivePerl\perl\lib\CORE
PERL = "C:\ActivePerl\perl\bin\perl.exe"
FULLPERL = "C:\ActivePerl\perl\bin\perl.exe"
ABSPERL = $(PERL)
PERLRUN = $(PERL)
FULLPERLRUN = $(FULLPERL)
ABSPERLRUN = $(ABSPERL)
PERLRUNINST = $(PERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
FULLPERLRUNINST = $(FULLPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
ABSPERLRUNINST = $(ABSPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
PERL_CORE = 0
PERM_DIR = 755
PERM_RW = 644
PERM_RWX = 755

MAKEMAKER   = C:/ActivePerl/perl/lib/ExtUtils/MakeMaker.pm
MM_VERSION  = 7.16
MM_REVISION = 71600

# FULLEXT = Pathname for extension directory (eg Foo/Bar/Oracle).
# BASEEXT = Basename part of FULLEXT. May be just equal FULLEXT. (eg Oracle)
# PARENT_NAME = NAME without BASEEXT and no trailing :: (eg Foo::Bar)
# DLBASE  = Basename part of dynamic library. May be just equal BASEEXT.
MAKE = dmake
FULLEXT = Dancer
BASEEXT = Dancer
PARENT_NAME = 
DLBASE = $(BASEEXT)
VERSION_FROM = 
OBJECT = 
LDFROM = $(OBJECT)
LINKTYPE = dynamic
BOOTDEP = 

# Handy lists of source code files:
XS_FILES = 
C_FILES  = 
O_FILES  = 
H_FILES  = 
MAN1PODS = 
MAN3PODS = 

# Where is the Config information that we are using/depend on
CONFIGDEP = $(PERL_ARCHLIBDEP)$(DFSEP)Config.pm $(PERL_INCDEP)$(DFSEP)config.h

# Where to build things
INST_LIBDIR      = $(INST_LIB)
INST_ARCHLIBDIR  = $(INST_ARCHLIB)

INST_AUTODIR     = $(INST_LIB)\auto\$(FULLEXT)
INST_ARCHAUTODIR = $(INST_ARCHLIB)\auto\$(FULLEXT)

INST_STATIC      = 
INST_DYNAMIC     = 
INST_BOOT        = 

# Extra linker info
EXPORT_LIST        = $(BASEEXT).def
PERL_ARCHIVE       = $(PERL_INC)\libperl524.a
PERL_ARCHIVEDEP    = $(PERL_INCDEP)\libperl524.a
PERL_ARCHIVE_AFTER = 


TO_INST_PM = lib/Dancer.pm \
	lib/Dancer/App.pm \
	lib/Dancer/Config.pm \
	lib/Dancer/Config/Object.pm \
	lib/Dancer/Continuation.pm \
	lib/Dancer/Continuation/Halted.pm \
	lib/Dancer/Continuation/Route.pm \
	lib/Dancer/Continuation/Route/ErrorSent.pm \
	lib/Dancer/Continuation/Route/FileSent.pm \
	lib/Dancer/Continuation/Route/Forwarded.pm \
	lib/Dancer/Continuation/Route/Passed.pm \
	lib/Dancer/Continuation/Route/Templated.pm \
	lib/Dancer/Cookbook.pod \
	lib/Dancer/Cookie.pm \
	lib/Dancer/Cookies.pm \
	lib/Dancer/Deployment.pod \
	lib/Dancer/Deprecation.pm \
	lib/Dancer/Development.pod \
	lib/Dancer/Development/Integration.pod \
	lib/Dancer/Engine.pm \
	lib/Dancer/Error.pm \
	lib/Dancer/Exception.pm \
	lib/Dancer/Exception/Base.pm \
	lib/Dancer/Factory/Hook.pm \
	lib/Dancer/FileUtils.pm \
	lib/Dancer/GetOpt.pm \
	lib/Dancer/HTTP.pm \
	lib/Dancer/Handler.pm \
	lib/Dancer/Handler/Debug.pm \
	lib/Dancer/Handler/PSGI.pm \
	lib/Dancer/Handler/Standalone.pm \
	lib/Dancer/Hook.pm \
	lib/Dancer/Hook/Properties.pm \
	lib/Dancer/Introduction.pod \
	lib/Dancer/Logger.pm \
	lib/Dancer/Logger/Abstract.pm \
	lib/Dancer/Logger/Capture.pm \
	lib/Dancer/Logger/Capture/Trap.pm \
	lib/Dancer/Logger/Console.pm \
	lib/Dancer/Logger/Diag.pm \
	lib/Dancer/Logger/File.pm \
	lib/Dancer/Logger/Note.pm \
	lib/Dancer/Logger/Null.pm \
	lib/Dancer/MIME.pm \
	lib/Dancer/ModuleLoader.pm \
	lib/Dancer/Object.pm \
	lib/Dancer/Object/Singleton.pm \
	lib/Dancer/Plugin.pm \
	lib/Dancer/Plugin/Ajax.pm \
	lib/Dancer/Plugins.pod \
	lib/Dancer/Policy.pod \
	lib/Dancer/Renderer.pm \
	lib/Dancer/Request.pm \
	lib/Dancer/Request/Upload.pm \
	lib/Dancer/Response.pm \
	lib/Dancer/Route.pm \
	lib/Dancer/Route/Cache.pm \
	lib/Dancer/Route/Registry.pm \
	lib/Dancer/Serializer.pm \
	lib/Dancer/Serializer/Abstract.pm \
	lib/Dancer/Serializer/Dumper.pm \
	lib/Dancer/Serializer/JSON.pm \
	lib/Dancer/Serializer/JSONP.pm \
	lib/Dancer/Serializer/Mutable.pm \
	lib/Dancer/Serializer/XML.pm \
	lib/Dancer/Serializer/YAML.pm \
	lib/Dancer/Session.pm \
	lib/Dancer/Session/Abstract.pm \
	lib/Dancer/Session/Simple.pm \
	lib/Dancer/Session/YAML.pm \
	lib/Dancer/SharedData.pm \
	lib/Dancer/Template.pm \
	lib/Dancer/Template/Abstract.pm \
	lib/Dancer/Template/Simple.pm \
	lib/Dancer/Template/TemplateToolkit.pm \
	lib/Dancer/Test.pm \
	lib/Dancer/Timer.pm \
	lib/Dancer/Tutorial.pod


# --- MakeMaker platform_constants section:
MM_Win32_VERSION = 7.16


# --- MakeMaker tool_autosplit section:
# Usage: $(AUTOSPLITFILE) FileToSplit AutoDirToSplitInto
AUTOSPLITFILE = $(ABSPERLRUN)  -e "use AutoSplit;  autosplit($$$$ARGV[0], $$$$ARGV[1], 0, 1, 1)" --



# --- MakeMaker tool_xsubpp section:


# --- MakeMaker tools_other section:
CHMOD = $(ABSPERLRUN) -MExtUtils::Command -e chmod --
CP = $(ABSPERLRUN) -MExtUtils::Command -e cp --
MV = $(ABSPERLRUN) -MExtUtils::Command -e mv --
NOOP = rem
NOECHO = @
RM_F = $(ABSPERLRUN) -MExtUtils::Command -e rm_f --
RM_RF = $(ABSPERLRUN) -MExtUtils::Command -e rm_rf --
TEST_F = $(ABSPERLRUN) -MExtUtils::Command -e test_f --
TOUCH = $(ABSPERLRUN) -MExtUtils::Command -e touch --
UMASK_NULL = umask 0
DEV_NULL = > NUL
MKPATH = $(ABSPERLRUN) -MExtUtils::Command -e mkpath --
EQUALIZE_TIMESTAMP = $(ABSPERLRUN) -MExtUtils::Command -e eqtime --
FALSE = $(ABSPERLRUN)  -e "exit 1" --
TRUE = $(ABSPERLRUN)  -e "exit 0" --
ECHO = $(ABSPERLRUN) -l -e "binmode STDOUT, qq{{:raw}}; print qq{{@ARGV}}" --
ECHO_N = $(ABSPERLRUN)  -e "print qq{{@ARGV}}" --
UNINST = 0
VERBINST = 0
MOD_INSTALL = $(ABSPERLRUN) -MExtUtils::Install -e "install([ from_to => {{@ARGV}}, verbose => '$(VERBINST)', uninstall_shadows => '$(UNINST)', dir_mode => '$(PERM_DIR)' ]);" --
DOC_INSTALL = $(ABSPERLRUN) -MExtUtils::Command::MM -e perllocal_install --
UNINSTALL = $(ABSPERLRUN) -MExtUtils::Command::MM -e uninstall --
WARN_IF_OLD_PACKLIST = $(ABSPERLRUN) -MExtUtils::Command::MM -e warn_if_old_packlist --
MACROSTART = 
MACROEND = 
USEMAKEFILE = -f
FIXIN = pl2bat.bat
CP_NONEMPTY = $(ABSPERLRUN) -MExtUtils::Command::MM -e cp_nonempty --


# --- MakeMaker makemakerdflt section:
makemakerdflt : all
	$(NOECHO) $(NOOP)


# --- MakeMaker dist section:
TAR = tar
TARFLAGS = cvf
ZIP = zip
ZIPFLAGS = -r
COMPRESS = gzip --best
SUFFIX = .gz
SHAR = shar
PREOP = $(NOECHO) $(NOOP)
POSTOP = $(NOECHO) $(NOOP)
TO_UNIX = $(NOECHO) $(NOOP)
CI = ci -u
RCS_LABEL = rcs -Nv$(VERSION_SYM): -q
DIST_CP = best
DIST_DEFAULT = tardist
DISTNAME = Dancer
DISTVNAME = Dancer-1.3202


# --- MakeMaker macro section:


# --- MakeMaker depend section:


# --- MakeMaker cflags section:


# --- MakeMaker const_loadlibs section:


# --- MakeMaker const_cccmd section:


# --- MakeMaker post_constants section:


# --- MakeMaker pasthru section:

PASTHRU = LIBPERL_A="$(LIBPERL_A)"\
	LINKTYPE="$(LINKTYPE)"\
	PREFIX="$(PREFIX)"\
	PASTHRU_DEFINE="$(DEFINE) $(PASTHRU_DEFINE)"\
	PASTHRU_INC="$(INC) $(PASTHRU_INC)"


# --- MakeMaker special_targets section:
.SUFFIXES : .xs .c .C .cpp .i .s .cxx .cc $(OBJ_EXT)

.PHONY: all config static dynamic test linkext manifest blibdirs clean realclean disttest distdir pure_all subdirs clean_subdirs makemakerdflt manifypods realclean_subdirs subdirs_dynamic subdirs_pure_nolink subdirs_static subdirs-test_dynamic subdirs-test_static test_dynamic test_static

.USESHELL :


# --- MakeMaker c_o section:


# --- MakeMaker xs_c section:


# --- MakeMaker xs_o section:


# --- MakeMaker top_targets section:
all :: pure_all
	$(NOECHO) $(NOOP)

pure_all :: config pm_to_blib subdirs linkext
	$(NOECHO) $(NOOP)

	$(NOECHO) $(NOOP)

subdirs :: $(MYEXTLIB)
	$(NOECHO) $(NOOP)

config :: $(FIRST_MAKEFILE) blibdirs
	$(NOECHO) $(NOOP)

help :
	perldoc ExtUtils::MakeMaker


# --- MakeMaker blibdirs section:
blibdirs : $(INST_LIBDIR)$(DFSEP).exists $(INST_ARCHLIB)$(DFSEP).exists $(INST_AUTODIR)$(DFSEP).exists $(INST_ARCHAUTODIR)$(DFSEP).exists $(INST_BIN)$(DFSEP).exists $(INST_SCRIPT)$(DFSEP).exists $(INST_MAN1DIR)$(DFSEP).exists $(INST_MAN3DIR)$(DFSEP).exists
	$(NOECHO) $(NOOP)

# Backwards compat with 6.18 through 6.25
blibdirs.ts : blibdirs
	$(NOECHO) $(NOOP)

$(INST_LIBDIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_LIBDIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_LIBDIR)
	$(NOECHO) $(TOUCH) $(INST_LIBDIR)$(DFSEP).exists

$(INST_ARCHLIB)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_ARCHLIB)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_ARCHLIB)
	$(NOECHO) $(TOUCH) $(INST_ARCHLIB)$(DFSEP).exists

$(INST_AUTODIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_AUTODIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_AUTODIR)
	$(NOECHO) $(TOUCH) $(INST_AUTODIR)$(DFSEP).exists

$(INST_ARCHAUTODIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_ARCHAUTODIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_ARCHAUTODIR)
	$(NOECHO) $(TOUCH) $(INST_ARCHAUTODIR)$(DFSEP).exists

$(INST_BIN)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_BIN)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_BIN)
	$(NOECHO) $(TOUCH) $(INST_BIN)$(DFSEP).exists

$(INST_SCRIPT)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_SCRIPT)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_SCRIPT)
	$(NOECHO) $(TOUCH) $(INST_SCRIPT)$(DFSEP).exists

$(INST_MAN1DIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_MAN1DIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_MAN1DIR)
	$(NOECHO) $(TOUCH) $(INST_MAN1DIR)$(DFSEP).exists

$(INST_MAN3DIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_MAN3DIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_MAN3DIR)
	$(NOECHO) $(TOUCH) $(INST_MAN3DIR)$(DFSEP).exists



# --- MakeMaker linkext section:

linkext :: dynamic
	$(NOECHO) $(NOOP)


# --- MakeMaker dlsyms section:

Dancer.def: Makefile.PL
	$(PERLRUN) -MExtUtils::Mksymlists \
     -e "Mksymlists('NAME'=>\"Dancer\", 'DLBASE' => '$(BASEEXT)', 'DL_FUNCS' => {  }, 'FUNCLIST' => [], 'IMPORTS' => {  }, 'DL_VARS' => []);"


# --- MakeMaker dynamic_bs section:

BOOTSTRAP =


# --- MakeMaker dynamic section:

dynamic :: $(FIRST_MAKEFILE) config $(INST_BOOT) $(INST_DYNAMIC)
	$(NOECHO) $(NOOP)


# --- MakeMaker dynamic_lib section:


# --- MakeMaker static section:

## $(INST_PM) has been moved to the all: target.
## It remains here for awhile to allow for old usage: "make static"
static :: $(FIRST_MAKEFILE) $(INST_STATIC)
	$(NOECHO) $(NOOP)


# --- MakeMaker static_lib section:


# --- MakeMaker manifypods section:

POD2MAN_EXE = $(PERLRUN) "-MExtUtils::Command::MM" -e pod2man "--"
POD2MAN = $(POD2MAN_EXE)


manifypods : pure_all config 
	$(NOECHO) $(NOOP)




# --- MakeMaker processPL section:


# --- MakeMaker installbin section:

EXE_FILES = bin/dancer

pure_all :: $(INST_SCRIPT)\dancer
	$(NOECHO) $(NOOP)

realclean ::
	$(RM_F) \
	  $(INST_SCRIPT)\dancer 

$(INST_SCRIPT)\dancer : bin/dancer $(FIRST_MAKEFILE) $(INST_SCRIPT)$(DFSEP).exists $(INST_BIN)$(DFSEP).exists
	$(NOECHO) $(RM_F) $(INST_SCRIPT)\dancer
	$(CP) bin/dancer $(INST_SCRIPT)\dancer
	$(FIXIN) $(INST_SCRIPT)\dancer
	-$(NOECHO) $(CHMOD) $(PERM_RWX) $(INST_SCRIPT)\dancer



# --- MakeMaker subdirs section:

# none

# --- MakeMaker clean_subdirs section:
clean_subdirs :
	$(NOECHO) $(NOOP)


# --- MakeMaker clean section:

# Delete temporary files but do not touch installed files. We don't delete
# the Makefile here so a later make realclean still has a makefile to use.

clean :: clean_subdirs
	- $(RM_F) \
	  $(BASEEXT).bso $(BASEEXT).def \
	  $(BASEEXT).exp $(BASEEXT).x \
	  $(BOOTSTRAP) $(INST_ARCHAUTODIR)\extralibs.all \
	  $(INST_ARCHAUTODIR)\extralibs.ld $(MAKE_APERL_FILE) \
	  *$(LIB_EXT) *$(OBJ_EXT) \
	  *perl.core MYMETA.json \
	  MYMETA.yml blibdirs.ts \
	  core core.*perl.*.? \
	  core.[0-9] core.[0-9][0-9] \
	  core.[0-9][0-9][0-9] core.[0-9][0-9][0-9][0-9] \
	  core.[0-9][0-9][0-9][0-9][0-9] lib$(BASEEXT).def \
	  mon.out perl \
	  perl$(EXE_EXT) perl.exe \
	  perlmain.c pm_to_blib \
	  pm_to_blib.ts so_locations \
	  tmon.out 
	- $(RM_RF) \
	  blib dll.base \
	  dll.exp 
	  $(NOECHO) $(RM_F) $(MAKEFILE_OLD)
	- $(MV) $(FIRST_MAKEFILE) $(MAKEFILE_OLD) $(DEV_NULL)


# --- MakeMaker realclean_subdirs section:
# so clean is forced to complete before realclean_subdirs runs
realclean_subdirs : clean
	$(NOECHO) $(NOOP)


# --- MakeMaker realclean section:
# Delete temporary files (via clean) and also delete dist files
realclean purge :: realclean_subdirs
	- $(RM_F) \
	  $(FIRST_MAKEFILE) $(MAKEFILE_OLD) 
	- $(RM_RF) \
	  $(DISTVNAME) 


# --- MakeMaker metafile section:
metafile : create_distdir
	$(NOECHO) $(ECHO) Generating META.yml
	$(NOECHO) $(ECHO) --- > META_new.yml
	$(NOECHO) $(ECHO) "abstract: 'lightweight yet powerful web application framework'" >> META_new.yml
	$(NOECHO) $(ECHO) author: >> META_new.yml
	$(NOECHO) $(ECHO) "  - 'Dancer Core Developers'" >> META_new.yml
	$(NOECHO) $(ECHO) build_requires: >> META_new.yml
	$(NOECHO) $(ECHO) "  Devel::Hide: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Digest::MD5: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  ExtUtils::MakeMaker: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  File::Spec: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  HTTP::Cookies: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  HTTP::Request: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  IO::Handle: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  IPC::Open3: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Plack::Builder: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Test::More: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Test::NoWarnings: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  blib: '1.01'" >> META_new.yml
	$(NOECHO) $(ECHO) "  utf8: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) configure_requires: >> META_new.yml
	$(NOECHO) $(ECHO) "  ExtUtils::MakeMaker: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "dynamic_config: 1" >> META_new.yml
	$(NOECHO) $(ECHO) "generated_by: 'ExtUtils::MakeMaker version 7.16, CPAN::Meta::Converter version 2.150005'" >> META_new.yml
	$(NOECHO) $(ECHO) "license: perl" >> META_new.yml
	$(NOECHO) $(ECHO) meta-spec: >> META_new.yml
	$(NOECHO) $(ECHO) "  url: http://module-build.sourceforge.net/META-spec-v1.4.html" >> META_new.yml
	$(NOECHO) $(ECHO) "  version: '1.4'" >> META_new.yml
	$(NOECHO) $(ECHO) "name: Dancer" >> META_new.yml
	$(NOECHO) $(ECHO) no_index: >> META_new.yml
	$(NOECHO) $(ECHO) "  directory:" >> META_new.yml
	$(NOECHO) $(ECHO) "    - t" >> META_new.yml
	$(NOECHO) $(ECHO) "    - inc" >> META_new.yml
	$(NOECHO) $(ECHO) requires: >> META_new.yml
	$(NOECHO) $(ECHO) "  Carp: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Cwd: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Data::Dumper: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Encode: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Exporter: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Fcntl: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  File::Basename: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  File::Copy: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  File::Path: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  File::Spec: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  File::Spec::Functions: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  File::Temp: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  File::stat: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  FindBin: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Getopt::Long: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  HTTP::Body: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  HTTP::Date: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  HTTP::Headers: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  HTTP::Server::Simple::PSGI: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Hash::Merge::Simple: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  IO::File: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  LWP::UserAgent: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  MIME::Types: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Module::Runtime: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  POSIX: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Pod::Usage: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Scalar::Util: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Test::Builder: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Test::More: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Time::HiRes: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  Try::Tiny: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  URI: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  URI::Escape: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  base: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  bytes: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  constant: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  lib: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  overload: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  parent: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  perl: '5.006'" >> META_new.yml
	$(NOECHO) $(ECHO) "  strict: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  vars: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "  warnings: '0'" >> META_new.yml
	$(NOECHO) $(ECHO) "version: '1.3202'" >> META_new.yml
	$(NOECHO) $(ECHO) "x_serialization_backend: 'CPAN::Meta::YAML version 0.018'" >> META_new.yml
	-$(NOECHO) $(MV) META_new.yml $(DISTVNAME)/META.yml
	$(NOECHO) $(ECHO) Generating META.json
	$(NOECHO) $(ECHO) {{ > META_new.json
	$(NOECHO) $(ECHO) "   \"abstract\" : \"lightweight yet powerful web application framework\"," >> META_new.json
	$(NOECHO) $(ECHO) "   \"author\" : [" >> META_new.json
	$(NOECHO) $(ECHO) "      \"Dancer Core Developers\"" >> META_new.json
	$(NOECHO) $(ECHO) "   ]," >> META_new.json
	$(NOECHO) $(ECHO) "   \"dynamic_config\" : 1," >> META_new.json
	$(NOECHO) $(ECHO) "   \"generated_by\" : \"ExtUtils::MakeMaker version 7.16, CPAN::Meta::Converter version 2.150005\"," >> META_new.json
	$(NOECHO) $(ECHO) "   \"license\" : [" >> META_new.json
	$(NOECHO) $(ECHO) "      \"perl_5\"" >> META_new.json
	$(NOECHO) $(ECHO) "   ]," >> META_new.json
	$(NOECHO) $(ECHO) "   \"meta-spec\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "      \"url\" : \"http://search.cpan.org/perldoc?CPAN::Meta::Spec\"," >> META_new.json
	$(NOECHO) $(ECHO) "      \"version\" : \"2\"" >> META_new.json
	$(NOECHO) $(ECHO) "   }}," >> META_new.json
	$(NOECHO) $(ECHO) "   \"name\" : \"Dancer\"," >> META_new.json
	$(NOECHO) $(ECHO) "   \"no_index\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "      \"directory\" : [" >> META_new.json
	$(NOECHO) $(ECHO) "         \"t\"," >> META_new.json
	$(NOECHO) $(ECHO) "         \"inc\"" >> META_new.json
	$(NOECHO) $(ECHO) "      ]" >> META_new.json
	$(NOECHO) $(ECHO) "   }}," >> META_new.json
	$(NOECHO) $(ECHO) "   \"prereqs\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "      \"build\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "         \"requires\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "            \"ExtUtils::MakeMaker\" : \"0\"" >> META_new.json
	$(NOECHO) $(ECHO) "         }}" >> META_new.json
	$(NOECHO) $(ECHO) "      }}," >> META_new.json
	$(NOECHO) $(ECHO) "      \"configure\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "         \"requires\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "            \"ExtUtils::MakeMaker\" : \"0\"" >> META_new.json
	$(NOECHO) $(ECHO) "         }}" >> META_new.json
	$(NOECHO) $(ECHO) "      }}," >> META_new.json
	$(NOECHO) $(ECHO) "      \"runtime\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "         \"requires\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "            \"Carp\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Cwd\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Data::Dumper\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Encode\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Exporter\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Fcntl\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"File::Basename\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"File::Copy\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"File::Path\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"File::Spec\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"File::Spec::Functions\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"File::Temp\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"File::stat\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"FindBin\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Getopt::Long\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"HTTP::Body\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"HTTP::Date\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"HTTP::Headers\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"HTTP::Server::Simple::PSGI\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Hash::Merge::Simple\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"IO::File\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"LWP::UserAgent\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"MIME::Types\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Module::Runtime\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"POSIX\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Pod::Usage\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Scalar::Util\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Test::Builder\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Test::More\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Time::HiRes\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Try::Tiny\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"URI\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"URI::Escape\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"base\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"bytes\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"constant\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"lib\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"overload\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"parent\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"perl\" : \"5.006\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"strict\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"vars\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"warnings\" : \"0\"" >> META_new.json
	$(NOECHO) $(ECHO) "         }}" >> META_new.json
	$(NOECHO) $(ECHO) "      }}," >> META_new.json
	$(NOECHO) $(ECHO) "      \"test\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "         \"requires\" : {{" >> META_new.json
	$(NOECHO) $(ECHO) "            \"Devel::Hide\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Digest::MD5\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"ExtUtils::MakeMaker\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"File::Spec\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"HTTP::Cookies\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"HTTP::Request\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"IO::Handle\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"IPC::Open3\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Plack::Builder\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Test::More\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"Test::NoWarnings\" : \"0\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"blib\" : \"1.01\"," >> META_new.json
	$(NOECHO) $(ECHO) "            \"utf8\" : \"0\"" >> META_new.json
	$(NOECHO) $(ECHO) "         }}" >> META_new.json
	$(NOECHO) $(ECHO) "      }}" >> META_new.json
	$(NOECHO) $(ECHO) "   }}," >> META_new.json
	$(NOECHO) $(ECHO) "   \"release_status\" : \"stable\"," >> META_new.json
	$(NOECHO) $(ECHO) "   \"version\" : \"1.3202\"," >> META_new.json
	$(NOECHO) $(ECHO) "   \"x_serialization_backend\" : \"JSON::PP version 2.27400\"" >> META_new.json
	$(NOECHO) $(ECHO) }} >> META_new.json
	-$(NOECHO) $(MV) META_new.json $(DISTVNAME)/META.json


# --- MakeMaker signature section:
signature :
	cpansign -s


# --- MakeMaker dist_basics section:
distclean :: realclean distcheck
	$(NOECHO) $(NOOP)

distcheck :
	$(PERLRUN) "-MExtUtils::Manifest=fullcheck" -e fullcheck

skipcheck :
	$(PERLRUN) "-MExtUtils::Manifest=skipcheck" -e skipcheck

manifest :
	$(PERLRUN) "-MExtUtils::Manifest=mkmanifest" -e mkmanifest

veryclean : realclean
	$(RM_F) *~ */*~ *.orig */*.orig *.bak */*.bak *.old */*.old



# --- MakeMaker dist_core section:

dist : $(DIST_DEFAULT) $(FIRST_MAKEFILE)
	$(NOECHO) $(ABSPERLRUN) -l -e "print 'Warning: Makefile possibly out of date with $(VERSION_FROM)'\
    if -e '$(VERSION_FROM)' and -M '$(VERSION_FROM)' < -M '$(FIRST_MAKEFILE)';" --

tardist : $(DISTVNAME).tar$(SUFFIX)
	$(NOECHO) $(NOOP)

uutardist : $(DISTVNAME).tar$(SUFFIX)
	uuencode $(DISTVNAME).tar$(SUFFIX) $(DISTVNAME).tar$(SUFFIX) > $(DISTVNAME).tar$(SUFFIX)_uu
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).tar$(SUFFIX)_uu'

$(DISTVNAME).tar$(SUFFIX) : distdir
	$(PREOP)
	$(TO_UNIX)
	$(TAR) $(TARFLAGS) $(DISTVNAME).tar $(DISTVNAME)
	$(RM_RF) $(DISTVNAME)
	$(COMPRESS) $(DISTVNAME).tar
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).tar$(SUFFIX)'
	$(POSTOP)

zipdist : $(DISTVNAME).zip
	$(NOECHO) $(NOOP)

$(DISTVNAME).zip : distdir
	$(PREOP)
	$(ZIP) $(ZIPFLAGS) $(DISTVNAME).zip $(DISTVNAME)
	$(RM_RF) $(DISTVNAME)
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).zip'
	$(POSTOP)

shdist : distdir
	$(PREOP)
	$(SHAR) $(DISTVNAME) > $(DISTVNAME).shar
	$(RM_RF) $(DISTVNAME)
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).shar'
	$(POSTOP)


# --- MakeMaker distdir section:
create_distdir :
	$(RM_RF) $(DISTVNAME)
	$(PERLRUN) "-MExtUtils::Manifest=manicopy,maniread" \
		-e "manicopy(maniread(),'$(DISTVNAME)', '$(DIST_CP)');"

distdir : create_distdir distmeta 
	$(NOECHO) $(NOOP)



# --- MakeMaker dist_test section:
disttest : distdir
	cd $(DISTVNAME) && $(ABSPERLRUN) Makefile.PL 
	cd $(DISTVNAME) && $(MAKE) $(PASTHRU)
	cd $(DISTVNAME) && $(MAKE) test $(PASTHRU)



# --- MakeMaker dist_ci section:
ci :
	$(ABSPERLRUN) -MExtUtils::Manifest=maniread -e "@all = sort keys %{{ maniread() }};\
print(qq{{Executing $(CI) @all\n}});\
system(qq{{$(CI) @all}}) == 0 or die $$!;\
print(qq{{Executing $(RCS_LABEL) ...\n}});\
system(qq{{$(RCS_LABEL) @all}}) == 0 or die $$!;" --


# --- MakeMaker distmeta section:
distmeta : create_distdir metafile
	$(NOECHO) cd $(DISTVNAME) && $(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e "exit unless -e q{{META.yml}};\
eval {{ maniadd({{q{{META.yml}} => q{{Module YAML meta-data (added by MakeMaker)}}}}) }}\
    or die \"Could not add META.yml to MANIFEST: $${{'^@'}}\"" --
	$(NOECHO) cd $(DISTVNAME) && $(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e "exit unless -f q{{META.json}};\
eval {{ maniadd({{q{{META.json}} => q{{Module JSON meta-data (added by MakeMaker)}}}}) }}\
    or die \"Could not add META.json to MANIFEST: $${{'^@'}}\"" --



# --- MakeMaker distsignature section:
distsignature : distmeta
	$(NOECHO) cd $(DISTVNAME) && $(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e "eval {{ maniadd({{q{{SIGNATURE}} => q{{Public-key signature (added by MakeMaker)}}}}) }}\
    or die \"Could not add SIGNATURE to MANIFEST: $${{'^@'}}\"" --
	$(NOECHO) cd $(DISTVNAME) && $(TOUCH) SIGNATURE
	cd $(DISTVNAME) && cpansign -s



# --- MakeMaker install section:

install :: pure_install doc_install
	$(NOECHO) $(NOOP)

install_perl :: pure_perl_install doc_perl_install
	$(NOECHO) $(NOOP)

install_site :: pure_site_install doc_site_install
	$(NOECHO) $(NOOP)

install_vendor :: pure_vendor_install doc_vendor_install
	$(NOECHO) $(NOOP)

pure_install :: pure_$(INSTALLDIRS)_install
	$(NOECHO) $(NOOP)

doc_install :: doc_$(INSTALLDIRS)_install
	$(NOECHO) $(NOOP)

pure__install : pure_site_install
	$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site

doc__install : doc_site_install
	$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site

pure_perl_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read "$(PERL_ARCHLIB)\auto\$(FULLEXT)\.packlist" \
		write "$(DESTINSTALLARCHLIB)\auto\$(FULLEXT)\.packlist" \
		"$(INST_LIB)" "$(DESTINSTALLPRIVLIB)" \
		"$(INST_ARCHLIB)" "$(DESTINSTALLARCHLIB)" \
		"$(INST_BIN)" "$(DESTINSTALLBIN)" \
		"$(INST_SCRIPT)" "$(DESTINSTALLSCRIPT)" \
		"$(INST_MAN1DIR)" "$(DESTINSTALLMAN1DIR)" \
		"$(INST_MAN3DIR)" "$(DESTINSTALLMAN3DIR)"
	$(NOECHO) $(WARN_IF_OLD_PACKLIST) \
		"$(SITEARCHEXP)\auto\$(FULLEXT)"


pure_site_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read "$(SITEARCHEXP)\auto\$(FULLEXT)\.packlist" \
		write "$(DESTINSTALLSITEARCH)\auto\$(FULLEXT)\.packlist" \
		"$(INST_LIB)" "$(DESTINSTALLSITELIB)" \
		"$(INST_ARCHLIB)" "$(DESTINSTALLSITEARCH)" \
		"$(INST_BIN)" "$(DESTINSTALLSITEBIN)" \
		"$(INST_SCRIPT)" "$(DESTINSTALLSITESCRIPT)" \
		"$(INST_MAN1DIR)" "$(DESTINSTALLSITEMAN1DIR)" \
		"$(INST_MAN3DIR)" "$(DESTINSTALLSITEMAN3DIR)"
	$(NOECHO) $(WARN_IF_OLD_PACKLIST) \
		"$(PERL_ARCHLIB)\auto\$(FULLEXT)"

pure_vendor_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read "$(VENDORARCHEXP)\auto\$(FULLEXT)\.packlist" \
		write "$(DESTINSTALLVENDORARCH)\auto\$(FULLEXT)\.packlist" \
		"$(INST_LIB)" "$(DESTINSTALLVENDORLIB)" \
		"$(INST_ARCHLIB)" "$(DESTINSTALLVENDORARCH)" \
		"$(INST_BIN)" "$(DESTINSTALLVENDORBIN)" \
		"$(INST_SCRIPT)" "$(DESTINSTALLVENDORSCRIPT)" \
		"$(INST_MAN1DIR)" "$(DESTINSTALLVENDORMAN1DIR)" \
		"$(INST_MAN3DIR)" "$(DESTINSTALLVENDORMAN3DIR)"


doc_perl_install :: all
	$(NOECHO) $(ECHO) Appending installation info to "$(DESTINSTALLARCHLIB)/perllocal.pod"
	-$(NOECHO) $(MKPATH) "$(DESTINSTALLARCHLIB)"
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" "$(INSTALLPRIVLIB)" \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> "$(DESTINSTALLARCHLIB)\perllocal.pod"

doc_site_install :: all
	$(NOECHO) $(ECHO) Appending installation info to "$(DESTINSTALLARCHLIB)/perllocal.pod"
	-$(NOECHO) $(MKPATH) "$(DESTINSTALLARCHLIB)"
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" "$(INSTALLSITELIB)" \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> "$(DESTINSTALLARCHLIB)\perllocal.pod"

doc_vendor_install :: all
	$(NOECHO) $(ECHO) Appending installation info to "$(DESTINSTALLARCHLIB)/perllocal.pod"
	-$(NOECHO) $(MKPATH) "$(DESTINSTALLARCHLIB)"
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" "$(INSTALLVENDORLIB)" \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> "$(DESTINSTALLARCHLIB)\perllocal.pod"


uninstall :: uninstall_from_$(INSTALLDIRS)dirs
	$(NOECHO) $(NOOP)

uninstall_from_perldirs ::
	$(NOECHO) $(UNINSTALL) "$(PERL_ARCHLIB)\auto\$(FULLEXT)\.packlist"

uninstall_from_sitedirs ::
	$(NOECHO) $(UNINSTALL) "$(SITEARCHEXP)\auto\$(FULLEXT)\.packlist"

uninstall_from_vendordirs ::
	$(NOECHO) $(UNINSTALL) "$(VENDORARCHEXP)\auto\$(FULLEXT)\.packlist"


# --- MakeMaker force section:
# Phony target to force checking subdirectories.
FORCE :
	$(NOECHO) $(NOOP)


# --- MakeMaker perldepend section:


# --- MakeMaker makefile section:
# We take a very conservative approach here, but it's worth it.
# We move Makefile to Makefile.old here to avoid gnu make looping.
$(FIRST_MAKEFILE) : Makefile.PL $(CONFIGDEP)
	$(NOECHO) $(ECHO) "Makefile out-of-date with respect to $?"
	$(NOECHO) $(ECHO) "Cleaning current config before rebuilding Makefile..."
	-$(NOECHO) $(RM_F) $(MAKEFILE_OLD)
	-$(NOECHO) $(MV)   $(FIRST_MAKEFILE) $(MAKEFILE_OLD)
	- $(MAKE) $(USEMAKEFILE) $(MAKEFILE_OLD) clean $(DEV_NULL)
	$(PERLRUN) Makefile.PL 
	$(NOECHO) $(ECHO) "==> Your Makefile has been rebuilt. <=="
	$(NOECHO) $(ECHO) "==> Please rerun the $(MAKE) command.  <=="
	$(FALSE)



# --- MakeMaker staticmake section:

# --- MakeMaker makeaperl section ---
MAP_TARGET    = perl
FULLPERL      = "C:\ActivePerl\perl\bin\perl.exe"
MAP_PERLINC   = "-Iblib\arch" "-Iblib\lib" "-IC:\ActivePerl\perl\lib" "-IC:\ActivePerl\perl\lib"

$(MAP_TARGET) :: $(MAKE_APERL_FILE)
	$(MAKE) $(USEMAKEFILE) $(MAKE_APERL_FILE) $@

$(MAKE_APERL_FILE) : static $(FIRST_MAKEFILE) pm_to_blib
	$(NOECHO) $(ECHO) Writing \"$(MAKE_APERL_FILE)\" for this $(MAP_TARGET)
	$(NOECHO) $(PERLRUNINST) \
		Makefile.PL DIR="" \
		MAKEFILE=$(MAKE_APERL_FILE) LINKTYPE=static \
		MAKEAPERL=1 NORECURS=1 CCCDLFLAGS=


# --- MakeMaker test section:
TEST_VERBOSE=0
TEST_TYPE=test_$(LINKTYPE)
TEST_FILE = test.pl
TEST_FILES = t/*.t t/00_base/*.t t/01_config/*.t t/02_request/*.t t/03_route_handler/*.t t/04_static_file/*.t t/05_views/*.t t/06_helpers/*.t t/07_apphandlers/*.t t/08_session/*.t t/09_cookies/*.t t/10_template/*.t t/11_logger/*.t t/12_response/*.t t/13_engines/*.t t/14_serializer/*.t t/15_plugins/*.t t/16_timer/*.t t/17_apps/*.t t/19_dancer/*.t t/20_deprecation/*.t t/21_dependents/*.t t/22_hooks/*.t t/23_dancer_tests/*.t t/24_deployment/*.t t/25_exceptions/*.t
TESTDB_SW = -d

testdb :: testdb_$(LINKTYPE)
	$(NOECHO) $(NOOP)

test :: $(TEST_TYPE)
	$(NOECHO) $(NOOP)

# Occasionally we may face this degenerate target:
test_ : test_dynamic
	$(NOECHO) $(NOOP)

subdirs-test_dynamic :: dynamic pure_all

test_dynamic :: subdirs-test_dynamic
	$(FULLPERLRUN) "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness($(TEST_VERBOSE), '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

testdb_dynamic :: dynamic pure_all
	$(FULLPERLRUN) $(TESTDB_SW) "-I$(INST_LIB)" "-I$(INST_ARCHLIB)" $(TEST_FILE)

subdirs-test_static :: static pure_all

test_static :: subdirs-test_static
	$(FULLPERLRUN) "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness($(TEST_VERBOSE), '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

testdb_static :: static pure_all
	$(FULLPERLRUN) $(TESTDB_SW) "-I$(INST_LIB)" "-I$(INST_ARCHLIB)" $(TEST_FILE)



# --- MakeMaker ppd section:
# Creates a PPD (Perl Package Description) for a binary distribution.
ppd :
	$(NOECHO) $(ECHO) "<SOFTPKG NAME=\"Dancer\" VERSION=\"1.3202\">" > Dancer.ppd
	$(NOECHO) $(ECHO) "    <ABSTRACT>lightweight yet powerful web application framework</ABSTRACT>" >> Dancer.ppd
	$(NOECHO) $(ECHO) "    <AUTHOR>Dancer Core Developers</AUTHOR>" >> Dancer.ppd
	$(NOECHO) $(ECHO) "    <IMPLEMENTATION>" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <PERLCORE VERSION=\"5,006,0,0\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Carp::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Cwd::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Data::Dumper\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Encode::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Exporter::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Fcntl::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"File::Basename\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"File::Copy\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"File::Path\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"File::Spec\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"File::Spec::Functions\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"File::Temp\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"File::stat\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"FindBin::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Getopt::Long\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"HTTP::Body\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"HTTP::Date\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"HTTP::Headers\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"HTTP::Server::Simple::PSGI\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Hash::Merge::Simple\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"IO::File\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"LWP::UserAgent\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"MIME::Types\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Module::Runtime\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"POSIX::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Pod::Usage\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Scalar::Util\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Test::Builder\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Test::More\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Time::HiRes\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"Try::Tiny\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"URI::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"URI::Escape\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"base::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"bytes::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"constant::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"lib::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"overload::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"parent::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"strict::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"vars::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <REQUIRE NAME=\"warnings::\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <ARCHITECTURE NAME=\"MSWin32-x64-multi-thread-5.24\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "        <CODEBASE HREF=\"\" />" >> Dancer.ppd
	$(NOECHO) $(ECHO) "    </IMPLEMENTATION>" >> Dancer.ppd
	$(NOECHO) $(ECHO) ^</SOFTPKG^> >> Dancer.ppd


# --- MakeMaker pm_to_blib section:

pm_to_blib : $(FIRST_MAKEFILE) $(TO_INST_PM)
	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e "pm_to_blib({{@ARGV}}, '$(INST_LIB)\auto', q[$(PM_FILTER)], '$(PERM_DIR)')" -- \
	  lib/Dancer.pm blib\lib\Dancer.pm \
	  lib/Dancer/App.pm blib\lib\Dancer\App.pm \
	  lib/Dancer/Config.pm blib\lib\Dancer\Config.pm \
	  lib/Dancer/Config/Object.pm blib\lib\Dancer\Config\Object.pm \
	  lib/Dancer/Continuation.pm blib\lib\Dancer\Continuation.pm \
	  lib/Dancer/Continuation/Halted.pm blib\lib\Dancer\Continuation\Halted.pm \
	  lib/Dancer/Continuation/Route.pm blib\lib\Dancer\Continuation\Route.pm \
	  lib/Dancer/Continuation/Route/ErrorSent.pm blib\lib\Dancer\Continuation\Route\ErrorSent.pm \
	  lib/Dancer/Continuation/Route/FileSent.pm blib\lib\Dancer\Continuation\Route\FileSent.pm \
	  lib/Dancer/Continuation/Route/Forwarded.pm blib\lib\Dancer\Continuation\Route\Forwarded.pm \
	  lib/Dancer/Continuation/Route/Passed.pm blib\lib\Dancer\Continuation\Route\Passed.pm \
	  lib/Dancer/Continuation/Route/Templated.pm blib\lib\Dancer\Continuation\Route\Templated.pm \
	  lib/Dancer/Cookbook.pod blib\lib\Dancer\Cookbook.pod \
	  lib/Dancer/Cookie.pm blib\lib\Dancer\Cookie.pm \
	  lib/Dancer/Cookies.pm blib\lib\Dancer\Cookies.pm \
	  lib/Dancer/Deployment.pod blib\lib\Dancer\Deployment.pod \
	  lib/Dancer/Deprecation.pm blib\lib\Dancer\Deprecation.pm \
	  lib/Dancer/Development.pod blib\lib\Dancer\Development.pod \
	  lib/Dancer/Development/Integration.pod blib\lib\Dancer\Development\Integration.pod 
	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e "pm_to_blib({{@ARGV}}, '$(INST_LIB)\auto', q[$(PM_FILTER)], '$(PERM_DIR)')" -- \
	  lib/Dancer/Engine.pm blib\lib\Dancer\Engine.pm \
	  lib/Dancer/Error.pm blib\lib\Dancer\Error.pm \
	  lib/Dancer/Exception.pm blib\lib\Dancer\Exception.pm \
	  lib/Dancer/Exception/Base.pm blib\lib\Dancer\Exception\Base.pm \
	  lib/Dancer/Factory/Hook.pm blib\lib\Dancer\Factory\Hook.pm \
	  lib/Dancer/FileUtils.pm blib\lib\Dancer\FileUtils.pm \
	  lib/Dancer/GetOpt.pm blib\lib\Dancer\GetOpt.pm \
	  lib/Dancer/HTTP.pm blib\lib\Dancer\HTTP.pm \
	  lib/Dancer/Handler.pm blib\lib\Dancer\Handler.pm \
	  lib/Dancer/Handler/Debug.pm blib\lib\Dancer\Handler\Debug.pm \
	  lib/Dancer/Handler/PSGI.pm blib\lib\Dancer\Handler\PSGI.pm \
	  lib/Dancer/Handler/Standalone.pm blib\lib\Dancer\Handler\Standalone.pm \
	  lib/Dancer/Hook.pm blib\lib\Dancer\Hook.pm \
	  lib/Dancer/Hook/Properties.pm blib\lib\Dancer\Hook\Properties.pm \
	  lib/Dancer/Introduction.pod blib\lib\Dancer\Introduction.pod \
	  lib/Dancer/Logger.pm blib\lib\Dancer\Logger.pm \
	  lib/Dancer/Logger/Abstract.pm blib\lib\Dancer\Logger\Abstract.pm \
	  lib/Dancer/Logger/Capture.pm blib\lib\Dancer\Logger\Capture.pm \
	  lib/Dancer/Logger/Capture/Trap.pm blib\lib\Dancer\Logger\Capture\Trap.pm \
	  lib/Dancer/Logger/Console.pm blib\lib\Dancer\Logger\Console.pm \
	  lib/Dancer/Logger/Diag.pm blib\lib\Dancer\Logger\Diag.pm 
	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e "pm_to_blib({{@ARGV}}, '$(INST_LIB)\auto', q[$(PM_FILTER)], '$(PERM_DIR)')" -- \
	  lib/Dancer/Logger/File.pm blib\lib\Dancer\Logger\File.pm \
	  lib/Dancer/Logger/Note.pm blib\lib\Dancer\Logger\Note.pm \
	  lib/Dancer/Logger/Null.pm blib\lib\Dancer\Logger\Null.pm \
	  lib/Dancer/MIME.pm blib\lib\Dancer\MIME.pm \
	  lib/Dancer/ModuleLoader.pm blib\lib\Dancer\ModuleLoader.pm \
	  lib/Dancer/Object.pm blib\lib\Dancer\Object.pm \
	  lib/Dancer/Object/Singleton.pm blib\lib\Dancer\Object\Singleton.pm \
	  lib/Dancer/Plugin.pm blib\lib\Dancer\Plugin.pm \
	  lib/Dancer/Plugin/Ajax.pm blib\lib\Dancer\Plugin\Ajax.pm \
	  lib/Dancer/Plugins.pod blib\lib\Dancer\Plugins.pod \
	  lib/Dancer/Policy.pod blib\lib\Dancer\Policy.pod \
	  lib/Dancer/Renderer.pm blib\lib\Dancer\Renderer.pm \
	  lib/Dancer/Request.pm blib\lib\Dancer\Request.pm \
	  lib/Dancer/Request/Upload.pm blib\lib\Dancer\Request\Upload.pm \
	  lib/Dancer/Response.pm blib\lib\Dancer\Response.pm \
	  lib/Dancer/Route.pm blib\lib\Dancer\Route.pm \
	  lib/Dancer/Route/Cache.pm blib\lib\Dancer\Route\Cache.pm \
	  lib/Dancer/Route/Registry.pm blib\lib\Dancer\Route\Registry.pm \
	  lib/Dancer/Serializer.pm blib\lib\Dancer\Serializer.pm \
	  lib/Dancer/Serializer/Abstract.pm blib\lib\Dancer\Serializer\Abstract.pm \
	  lib/Dancer/Serializer/Dumper.pm blib\lib\Dancer\Serializer\Dumper.pm \
	  lib/Dancer/Serializer/JSON.pm blib\lib\Dancer\Serializer\JSON.pm 
	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e "pm_to_blib({{@ARGV}}, '$(INST_LIB)\auto', q[$(PM_FILTER)], '$(PERM_DIR)')" -- \
	  lib/Dancer/Serializer/JSONP.pm blib\lib\Dancer\Serializer\JSONP.pm \
	  lib/Dancer/Serializer/Mutable.pm blib\lib\Dancer\Serializer\Mutable.pm \
	  lib/Dancer/Serializer/XML.pm blib\lib\Dancer\Serializer\XML.pm \
	  lib/Dancer/Serializer/YAML.pm blib\lib\Dancer\Serializer\YAML.pm \
	  lib/Dancer/Session.pm blib\lib\Dancer\Session.pm \
	  lib/Dancer/Session/Abstract.pm blib\lib\Dancer\Session\Abstract.pm \
	  lib/Dancer/Session/Simple.pm blib\lib\Dancer\Session\Simple.pm \
	  lib/Dancer/Session/YAML.pm blib\lib\Dancer\Session\YAML.pm \
	  lib/Dancer/SharedData.pm blib\lib\Dancer\SharedData.pm \
	  lib/Dancer/Template.pm blib\lib\Dancer\Template.pm \
	  lib/Dancer/Template/Abstract.pm blib\lib\Dancer\Template\Abstract.pm \
	  lib/Dancer/Template/Simple.pm blib\lib\Dancer\Template\Simple.pm \
	  lib/Dancer/Template/TemplateToolkit.pm blib\lib\Dancer\Template\TemplateToolkit.pm \
	  lib/Dancer/Test.pm blib\lib\Dancer\Test.pm \
	  lib/Dancer/Timer.pm blib\lib\Dancer\Timer.pm \
	  lib/Dancer/Tutorial.pod blib\lib\Dancer\Tutorial.pod 
	$(NOECHO) $(TOUCH) pm_to_blib


# --- MakeMaker selfdocument section:

# here so even if top_targets is overridden, these will still be defined
# gmake will silently still work if any are .PHONY-ed but nmake won't

static ::
	$(NOECHO) $(NOOP)

dynamic ::
	$(NOECHO) $(NOOP)

config ::
	$(NOECHO) $(NOOP)


# --- MakeMaker postamble section:


# End.
